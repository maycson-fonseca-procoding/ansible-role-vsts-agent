---

- name: populate service facts
  service_facts:

- name: ensure service is enabled
  service:
    name: "{{ vsts_service }}"
    enabled: true
  when:
    - "(vsts_service) in services"

- name: ensure service is started
  service:
    name: "{{ vsts_service }}"
    state: started
  when:
    - "(vsts_service) in services"
    - ansible_facts.services[(vsts_service)].state is match("stopped")

- name: create vsts agent directory
  file:
    owner: "{{ vsts_user }}"
    group: "{{ vsts_group }}"
    mode: '0750'
    state: directory
    path: "{{ vsts_agent_path }}"
  when:
    - "(vsts_service) not in services"

- name: get vsts agent
  become: yes
  become_user: "{{ vsts_user }}"
  unarchive:
    owner: "{{ vsts_user }}"
    group: "{{ vsts_group }}"
    remote_src: yes
    src: "{{ vsts_agent_url }}"
    dest: "{{ vsts_agent_path }}"
  when:
    - "(vsts_service) not in services"

- name: configure vsts agent
  become: yes
  become_user: "{{ vsts_user }}"
  command: |
    ./config.sh \
    --deploymentGroup \
    --deploymentGroupName "{{ vsts_deployment_group }}" \
    --acceptteeeula \
    --agent {{ ansible_hostname }} \
    --url {{ vsts_project_url }} \
    --work {{ vsts_project_work_group }} \
    --projectname {{ vsts_project_name }} \
    --addDeploymentGroupTags \
    --deploymentGroupTags "{{ vsts_group_tags }}" \
    --auth PAT --token {{ vsts_token }} \
    --runasservice
  args:
    chdir: "{{ vsts_agent_path }}"
  when:
    - "(vsts_service) not in services"

- name: install vsts agent
  become: yes
  become_user: "{{ vsts_user }}"
  command: sudo ./svc.sh install
  args:
    chdir: "{{ vsts_agent_path }}"
  when:
    - "(vsts_service) not in services"

- name: initiate vsts agent
  become: yes
  become_user: "{{ vsts_user }}"
  command: sudo ./svc.sh start
  args:
    chdir: "{{ vsts_agent_path }}"
  when:
    - "(vsts_service) not in services"
